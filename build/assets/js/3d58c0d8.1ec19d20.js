"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1880],{1647:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Combine AWS/deploying-maintaining/how-tos/how-to-hotfix","title":"How To: Deploy a Hotfix Release","description":"(more detail coming!)","source":"@site/docs/Combine AWS/deploying-maintaining/how-tos/how-to-hotfix.md","sourceDirName":"Combine AWS/deploying-maintaining/how-tos","slug":"/Combine AWS/deploying-maintaining/how-tos/how-to-hotfix","permalink":"/Combine AWS/deploying-maintaining/how-tos/how-to-hotfix","draft":false,"unlisted":false,"editUrl":"https://github.com/Combine-Pathfinder-Palisade/combine-docs/blob/main/docs/Combine AWS/deploying-maintaining/how-tos/how-to-hotfix.md","tags":[],"version":"current","lastUpdatedBy":"github-actions","lastUpdatedAt":1739223322000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"How to handle java.io.IOException: Broken pipe","permalink":"/Combine AWS/deploying-maintaining/how-tos/how-to-handle-java-broken-pipe"},"next":{"title":"How To: Run Java Through Socks Proxy with proxychains","permalink":"/Combine AWS/deploying-maintaining/how-tos/how-to-run-java-through-proxychains"}}');var t=n(4848),s=n(8453);const r={},a="How To: Deploy a Hotfix Release",c={},l=[];function h(e){const o={code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsx)(o.h1,{id:"how-to-deploy-a-hotfix-release",children:"How To: Deploy a Hotfix Release"})}),"\n",(0,t.jsx)(o.p,{children:"(more detail coming!)"}),"\n",(0,t.jsxs)(o.p,{children:["Branching off of the last stable tag from master is what we want to do when we're doing a very precise bug fix. If so, the version will have a fourth quadrant, i.e. if you were fixing a bug on ",(0,t.jsx)(o.code,{children:"3.13.1"}),", you'd move to ",(0,t.jsx)(o.code,{children:"3.13.1.1"})," ideally, instead of ",(0,t.jsx)(o.code,{children:"3.13.2"}),"."]}),"\n",(0,t.jsx)(o.p,{children:"In rare cases, i.e. for Salesforce, we will have to branch from a tag prior to the last stable version."}),"\n",(0,t.jsx)(o.p,{children:"Here's the process:"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:["branch from last stable tag on master, suffix with ",(0,t.jsx)(o.code,{children:"_branch"})," or ",(0,t.jsx)(o.code,{children:"_hotfix"})]}),"\n",(0,t.jsxs)(o.li,{children:["make change, be sure to add release note in ",(0,t.jsx)(o.code,{children:"release-notes.html"})," (if you can do it one commit that'd be easiest)"]}),"\n",(0,t.jsxs)(o.li,{children:["update versions on separate commit (see ",(0,t.jsx)(o.code,{children:"update_bricks_version.sh"})," in ",(0,t.jsx)(o.code,{children:"/combine-automation-tool/scripts"}),", copy it from ",(0,t.jsx)(o.code,{children:"master"})," if it's not there), add 4th quadrant release number"]}),"\n",(0,t.jsxs)(o.li,{children:["test change, locally if possible","\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:"TODO add guide for testing rewriters, as these are the most common case"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(o.li,{children:"deploy to customer"}),"\n",(0,t.jsxs)(o.li,{children:["upon successful deploy (i..e hear back from customer that it works):","\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:["push the ",(0,t.jsx)(o.em,{children:"first"})," commit (i.e. the code change + release note change) into master via squash commit"]}),"\n",(0,t.jsxs)(o.li,{children:["you can also ",(0,t.jsx)(o.code,{children:"cherrypick"}),", just as long as the change and the release notes are merged into ",(0,t.jsx)(o.code,{children:"master"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(o.li,{children:["tag your new tag from your hotfix branch, with ",(0,t.jsx)(o.code,{children:"git tag bricks_v_3_13_1_1"})," in this case"]}),"\n",(0,t.jsxs)(o.li,{children:["push the tag, i.e. ",(0,t.jsx)(o.code,{children:"git push origin tag bricks_v_3_13_1_1"})]}),"\n"]}),"\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"master"})," is merged into ",(0,t.jsx)(o.code,{children:"dev"})," regularly."]})]})}function d(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>a});var i=n(6540);const t={},s=i.createContext(t);function r(e){const o=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:o},e.children)}}}]);