"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1184],{4616:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Combine AWS/deploying-maintaining/how-tos/how-to-configure-airgap","title":"How To: Configure AirGap Layer","description":"There are several options to control the AirGap layer behavior in Combine. These are configured via configuration parameters in the combine-vpc.yaml template.","source":"@site/docs/Combine AWS/deploying-maintaining/how-tos/how-to-configure-airgap.md","sourceDirName":"Combine AWS/deploying-maintaining/how-tos","slug":"/Combine AWS/deploying-maintaining/how-tos/how-to-configure-airgap","permalink":"/Combine AWS/deploying-maintaining/how-tos/how-to-configure-airgap","draft":false,"unlisted":false,"editUrl":"https://github.com/Combine-Pathfinder-Palisade/combine-docs/blob/main/docs/Combine AWS/deploying-maintaining/how-tos/how-to-configure-airgap.md","tags":[],"version":"current","lastUpdatedBy":"github-actions","lastUpdatedAt":1739223322000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"How-Tos","permalink":"/category/how-tos"},"next":{"title":"How To: Modify Customer Firewall Rules","permalink":"/Combine AWS/deploying-maintaining/how-tos/how-to-configure-customer-firewall"}}');var n=o(4848),t=o(8453);const a={},l="How To: Configure AirGap Layer",s={},d=[{value:"Build/Destroy Firewall",id:"builddestroy-firewall",level:2},{value:"Enable/Disable Firewall (&quot;Dropping the AirGap Layer&quot;)",id:"enabledisable-firewall-dropping-the-airgap-layer",level:2},{value:"Enable/Disable Firewall Permissive Mode",id:"enabledisable-firewall-permissive-mode",level:2},{value:"Add Exeception List",id:"add-exeception-list",level:2},{value:"Create Network Rule Group",id:"create-network-rule-group",level:3},{value:"Configure Override Rule Group",id:"configure-override-rule-group",level:3},{value:"Set Exemption Rule",id:"set-exemption-rule",level:3}];function c(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"how-to-configure-airgap-layer",children:"How To: Configure AirGap Layer"})}),"\n",(0,n.jsxs)(i.p,{children:["There are several options to control the AirGap layer behavior in Combine. These are configured via configuration parameters in the ",(0,n.jsx)(i.code,{children:"combine-vpc.yaml"})," template."]}),"\n",(0,n.jsx)(i.p,{children:"The Private Firewall (sometimes just called Firewall) handles outbound traffic for private subnets. The Public Firewall handles outbound traffic for public subnets. The configuration options are the same for both."}),"\n",(0,n.jsx)(i.h2,{id:"builddestroy-firewall",children:"Build/Destroy Firewall"}),"\n",(0,n.jsxs)(i.p,{children:["This is the most dramatic option. In the ",(0,n.jsx)(i.code,{children:"combine-vpc.yaml"})," template there is a configuration parameter pair:"]}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"CombineFirewallPrivateBuild"}),"\n",(0,n.jsx)(i.code,{children:"CombineFirewallPublicBuild"})]}),"\n",(0,n.jsxs)(i.p,{children:["Setting either of these to ",(0,n.jsx)(i.code,{children:"false"})," completely destroys the respective Firewall and Firewall resources and routes outbound traffic directly to the NAT Gateway / IGW."]}),"\n",(0,n.jsx)(i.h2,{id:"enabledisable-firewall-dropping-the-airgap-layer",children:'Enable/Disable Firewall ("Dropping the AirGap Layer")'}),"\n",(0,n.jsx)(i.p,{children:"You have the option to stop routing outbound traffic through a Firewall through the following configuration parameter:"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.code,{children:"EnableAirgap"})}),"\n",(0,n.jsxs)(i.p,{children:["Setting this to ",(0,n.jsx)(i.code,{children:"false"})," leaves Firewall resources instact but chains the route table so outbound traffic bypasses its respective Firewall and routes directly to the NAT Gateway / IGW."]}),"\n",(0,n.jsx)(i.h2,{id:"enabledisable-firewall-permissive-mode",children:"Enable/Disable Firewall Permissive Mode"}),"\n",(0,n.jsx)(i.p,{children:"You have the option to allow all outbound traffic but still log each outbound connection on the TAP Dashboard as a Violation through the following configuration parameter:"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.code,{children:"EnableAirgapPermissiveMode"})}),"\n",(0,n.jsxs)(i.p,{children:["Setting this to ",(0,n.jsx)(i.code,{children:"true"})," while the Firewall is in operation (assuming the build flag and ",(0,n.jsx)(i.code,{children:"EnableAirgap"})," configuration parameters are ",(0,n.jsx)(i.code,{children:"true"}),") allows all outbound traffic but still throws a Violation for each outbound call."]}),"\n",(0,n.jsx)(i.h2,{id:"add-exeception-list",children:"Add Exeception List"}),"\n",(0,n.jsx)(i.p,{children:"You have the option to create an exception list for each Firewall. This allows individual domains to be exempted from the airgap layer."}),"\n",(0,n.jsx)(i.p,{children:"If this account does not have an override rule group already you will need to create one."}),"\n",(0,n.jsx)(i.h3,{id:"create-network-rule-group",children:"Create Network Rule Group"}),"\n",(0,n.jsx)(i.p,{children:"To do this, you must create an AWS Network Firewall Rule Group."}),"\n",(0,n.jsxs)(i.p,{children:["Go to VPC Dashboard. On the left navigation list under ",(0,n.jsx)(i.code,{children:"Network Firewall"})," there is a ",(0,n.jsx)(i.code,{children:"Network Firewall rule groups"})," page.\nClick ",(0,n.jsx)(i.code,{children:"Create Rule Group"}),".\nChoose ",(0,n.jsx)(i.code,{children:"Stateful rule group"}),".\nChoose ",(0,n.jsx)(i.code,{children:"Suricata compatible rule string"})," under ",(0,n.jsx)(i.code,{children:"Rule group format"}),".\nChoose ",(0,n.jsx)(i.code,{children:"Strict order"}),"."]}),"\n",(0,n.jsx)(i.p,{children:"Click Next."}),"\n",(0,n.jsxs)(i.p,{children:["Choose a name. Recommended: ",(0,n.jsx)(i.code,{children:"Combine-Firewall-Override-List"}),".\nChoose a capacity. Recommended: ",(0,n.jsx)(i.code,{children:"4092"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:["For ",(0,n.jsx)(i.code,{children:"IP set variables"})," you probably want to create a variable with the ",(0,n.jsx)(i.code,{children:"Variable name"})," of ",(0,n.jsx)(i.code,{children:"VpcCidrRanges"})," and a ",(0,n.jsx)(i.code,{children:"Values"})," of a list of the CIDR blocks for the VPC you are in."]}),"\n",(0,n.jsxs)(i.p,{children:["Now you enter a ",(0,n.jsx)(i.code,{children:"Suricata compatible rule string"}),"."]}),"\n",(0,n.jsx)(i.p,{children:"Here is a template for a single domain suffix exception:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'pass tls $VpcCidrRanges any -> any any (msg:"White List"; flow:to_server; tls.sni; content:"<domain suffix>"; nocase; endswith; ssl_state:client_hello; sid:1001; rev:1;)\npass http $VpcCidrRanges any -> any any (msg:"White List"; content:"<domain suffix>"; http_host; endswith; sid:1002; rev:1;)\n'})}),"\n",(0,n.jsxs)(i.p,{children:["In the above template ",(0,n.jsx)(i.code,{children:"<domain suffix>"})," can be a value such as ",(0,n.jsx)(i.code,{children:"github.com"})," (which matches all domains ending in ",(0,n.jsx)(i.code,{children:"github.com"}),") or ",(0,n.jsx)(i.code,{children:".combine.io"})," (which matches all subdomains of ",(0,n.jsx)(i.code,{children:"combine.io"})," but NOT ",(0,n.jsx)(i.code,{children:"combine.io"})," itself)."]}),"\n",(0,n.jsxs)(i.p,{children:["Pay attention to the ",(0,n.jsx)(i.code,{children:"sid"}),". Each line must have a unique ",(0,n.jsx)(i.code,{children:"sid"})," and they are evaluated in order of ",(0,n.jsx)(i.code,{children:"sid"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:["Click ",(0,n.jsx)(i.code,{children:"Next"}),".\nClick ",(0,n.jsx)(i.code,{children:"Next"}),".\nClick ",(0,n.jsx)(i.code,{children:"Create rule group"}),"."]}),"\n",(0,n.jsx)(i.h3,{id:"configure-override-rule-group",children:"Configure Override Rule Group"}),"\n",(0,n.jsxs)(i.p,{children:["Once that rule group has been created copy the ",(0,n.jsx)(i.code,{children:"ARN"})," value. Update the ",(0,n.jsx)(i.code,{children:"combine-vpc.yaml"})," template and set the ",(0,n.jsx)(i.code,{children:"ARN"})," value for the appropriate configuration parameter for the Firewall you are configuring:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"CombineFirewallPrivateAuxiliaryRuleGroup\nCombineFirewallPublicAuxiliaryRuleGroup\n"})}),"\n",(0,n.jsx)(i.h3,{id:"set-exemption-rule",children:"Set Exemption Rule"}),"\n",(0,n.jsx)(i.p,{children:"Exemptions can be added to the override rule group via the template described above."})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,i,o)=>{o.d(i,{R:()=>a,x:()=>l});var r=o(6540);const n={},t=r.createContext(n);function a(e){const i=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);